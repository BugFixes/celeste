---
AWSTemplateFormatVersion: 2010-09-09
Description: Celeste Service

Parameters:
  ServiceName:
    Type: String
    Default: celeste
  Environment:
    Type: String
    Default: local
  DatabaseBugs:
    Type: String
    Default: bugs
  DatabaseAccounts:
    Type: String
    Default: accounts
  DatabaseAgents:
    Type: String
    Default: agents
  DatabaseComms:
    Type: String
    Default: comms
  DatabaseTicketing:
    Type: String
    Default: ticketing
  DatabaseTickets:
    Type: String
    Default: tickets
  DatabaseLogs:
    Type: String
    Default: logs
  QueueName:
    Type: String
    Default: bugs
  BuildBucket:
    Type: String
    Default: bugfixes-celeste-builds
  BuildKey:
    Type: String
    Default: celeste-local.zip

Resources:
  ServiceARN:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        !Join
        - '-'
        - - !Ref ServiceName
          - 'role'
          - !Ref Environment
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName:
            !Join
            - ''
            - - !Ref ServiceName
              - 'Lambda'
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'
              - Effect: Allow
                Action:
                  - sqs:SendMessage
                  - sqs:ReceiveMessage
                Resource:
                  !Join
                  - ':'
                  - - 'arn'
                    - 'aws'
                    - 'sqs'
                    - !Ref AWS::Region
                    - !Ref AWS::AccountId
                    - !Ref QueueMain
              - Effect: Allow
                Action:
                  - sqs:ReveiveMessage
                Resource:
                  !Join
                  - ':'
                  - - 'arn'
                    - 'aws'
                    - 'sqs'
                    - !Ref AWS::Region
                    - !Ref AWS::AccountId
                    - !Ref QueueDeadLetter
              - Effect: Allow
                Action:
                  - dynamodb:UpdateTable
                  - dynamodb:DescribeTable
                Resource:
                  !Join
                  - ':'
                  - - 'arn'
                    - 'aws'
                    - 'dynamodb'
                    - !Ref AWS::Region
                    - !Ref AWS::AccountId
                    - !Ref DatabaseBugs
              - Effect: Allow
                Action:
                  - dynamodb:UpdateTable
                  - dynamodb:DescribeTable
                Resource:
                  !Join
                  - ':'
                  - - 'arn'
                    - 'aws'
                    - 'dynamodb'
                    - !Ref AWS::Region
                    - !Ref AWS::AccountId
                    - !Ref DatabaseAccounts
              - Effect: Allow
                Action:
                  - dynamodb:UpdateTable
                  - dynamodb:DescribeTable
                Resource:
                  !Join
                  - ':'
                  - - 'arn'
                    - 'aws'
                    - 'dynamodb'
                    - !Ref AWS::Region
                    - !Ref AWS::AccountId
                    - !Ref DatabaseAgents
              - Effect: Allow
                Action:
                  - dynamodb:UpdateTable
                  - dynamodb:DescribeTable
                Resource:
                  !Join
                  - ':'
                  - - 'arn'
                    - 'aws'
                    - 'dynamodb'
                    - !Ref AWS::Region
                    - !Ref AWS::AccountId
                    - !Ref DatabaseComms
              - Effect: Alow
                Action:
                  - dynamodb:UpdateTable
                  - dynamodb:DescribeTable
                Resource:
                  !Join
                  - ':'
                  - - 'arn'
                    - 'aws'
                    - 'dynamodb'
                    - !Ref AWS::Region
                    - !Ref AWS::AccountId
                    - !Ref DatabaseTicketing
              - Effect: Allow
                Action:
                  - dynamodb:UpdateTable
                  - dynamodb:DescribeTable
                Resource:
                  !Join
                  - ':'
                  - - 'arn'
                    - 'aws'
                    - 'dynamodb'
                    - !Ref AWS::Region
                    - !Ref AWS::AccountId
                    - !Ref DatabaseTickets
              - Effect: Allow
                Action:
                  - dynamodb:UpdateTable
                  - dynamodb:DescribeTable
                Resource:
                  !Join
                  - ':'
                  - - 'arn'
                    - 'aws'
                    - 'dynamodb'
                    - !Ref AWS::Region
                    - !Ref AWS::AccountId
                    - !Ref DatabaseLogs

  Logs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        !Join
        - '-'
        - - !Ref ServiceName
          - 'logs'
          - !Ref Environment
      RetentionInDays: 90

  QueueMain:
    Type: AWS::SQS::Queue
    Properties:
      RedrivePolicy:
        deadLetterTargetArn:
          !GetAtt QueueDeadLetter.Arn
        maxReceiveCount: 5
      QueueName:
        !Join
        - '-'
        - - !Ref ServiceName
          - 'QueueMain'
          - !Ref Environment
  QueueDeadLetter:
    Type: AWS::SQS::Queue
    Properties:
      QueueName:
        !Join
        - '-'
        - - !Ref ServiceName
          - 'QueueDeadLetter'
          - !Ref Environment

  DynamoBugs:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: !Ref DatabaseBugs
  DynamoAccounts:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: !Ref DatabaseAccounts
  DynamoAgents:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: !Ref DatabaseAgents
  DynamoComms:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: !Ref DatabaseComms
  DynamoTicketing:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: !Ref DatabaseTicketing
  DynamoTickets:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: !Ref DatabaseTickets
  DynamoLogs:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: !Ref DatabaseLogs

#  Bucket:
#    Type: AWS::S3::Bucket
#    DeletionPolicy: Retain
#    Properties:
#      AccessControl: Private
#      BucketName:
#        !Join
#        - '-'
#        - - 'bugfixes'
#          - !Ref ServiceName
#          - !Ref Environment

#  Gateway:
#    Type: AWS::ApiGateway::RestApi
#    Properties:
#      EndpointConfiguration:
#        Types:
#          - REGIONAL
#      Name:
#        !Join
#        - '-'
#        - - !Ref ServiceName
#          - 'Gateway'
#          - !Ref Environment
#  GatewayV1:
#    Type: AWS::ApiGateway::Stage
#    Properties:
#      DeploymentId: !Ref GatewayDeployment
#      RestApiId: !Ref Gateway
#      StageName: 'v0'
#  GatewayDeployment:
#    Type: AWS::ApiGateway::Deployment
#    DependsOn:
#      - CreateAccount
#    Properties:
#      RestApiId: !Ref Gateway
#  GatewayEmptyModel:
#    Type: AWS::ApiGateway::Model
#    Properties:
#      ContentType: 'application/json'
#      RestApiId: !Ref Gateway
#      Schema: {}
#  CreateAccountResource:
#    Type: AWS::ApiGateway::Resource
#    Properties:
#      ParentId:
#        !GetAtt
#        - Gateway
#        - RootResourceId
#      PathPart: 'account'
#      RestApiId: !Ref Gateway
#  CreateAccountRequestModel:
#    Type: AWS::ApiGateway::Model
#    Properties:
#      ContentType: 'application/json'
#      RestApiId: !Ref Gateway
#      Schema:
#        $schema: 'http://json-schema.org/draft-04/schema#'
#        title: AccountCreate
#        type: object
#        properties:
#          name:
#            type: string
#          email:
#            type: string
#            format: email
#  CreateAccount:
#    Type: AWS::ApiGateway::Method
#    Properties:
#      ApiKeyRequired: false
#      AuthorizationType: NONE
#      HttpMethod: POST
#      Integration:
#        ConnectionType: INTERNET
#        IntegrationResponses:
#          - ResponseTemplates:
#              application/json: "{\"operation\":\"celeste_account_create\",\"data\":{\"key\":\"123e4567-e89b-12d3-a456-426614174000\",\"secret\":\"123e4567-e89b-12d3-a456-426614174000\"}}"
#            SelectionPattern: '2\d{2}'
#            StatusCode: '202'
#          - ResponseTemplates:
#              application/json: "{\"message\":\"Unknown Error\"}"
#            SelectionPattern: '5\d{2}'
#            StatusCode: '500'
#        PassthroughBehavior: WHEN_NO_TEMPLATES
#        RequestTemplates:
#          application/json: !Ref CreateAccountRequestModel
#        Type: MOCK
#        TimeoutInMillis: 29000
#      MethodResponses:
#        - ResponseModels:
#            application/json: !Ref GatewayEmptyModel
#          StatusCode: '202'
#        - ResponseModels:
#            application/json: !Ref GatewayEmptyModel
#          StatusCode: '500'
#      OperationName: 'create_account'
#      ResourceId: !Ref CreateAccountResource
#      RestApiId: !Ref Gateway
