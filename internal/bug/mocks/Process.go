// Code generated by mockery 2.7.5. DO NOT EDIT.

package mocks

import (
	events "github.com/aws/aws-lambda-go/events"
	bug2 "github.com/bugfixes/celeste/internal/bug"
	mock "github.com/stretchr/testify/mock"
)

// Process is an autogenerated mock type for the Process type
type Process struct {
	mock.Mock
}

// Fetch provides a mock function with given fields:
func (_m *Process) Fetch() (bug2.Response, error) {
	ret := _m.Called()

	var r0 bug2.Response
	if rf, ok := ret.Get(0).(func() bug2.Response); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bug2.Response)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Parse provides a mock function with given fields: request
func (_m *Process) Parse(request events.APIGatewayProxyRequest) (bug2.Response, error) {
	ret := _m.Called(request)

	var r0 bug2.Response
	if rf, ok := ret.Get(0).(func(events.APIGatewayProxyRequest) bug2.Response); ok {
		r0 = rf(request)
	} else {
		r0 = ret.Get(0).(bug2.Response)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(events.APIGatewayProxyRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Report provides a mock function with given fields:
func (_m *Process) Report() (bug2.Response, error) {
	ret := _m.Called()

	var r0 bug2.Response
	if rf, ok := ret.Get(0).(func() bug2.Response); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bug2.Response)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
